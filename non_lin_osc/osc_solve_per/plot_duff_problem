#!/usr/bin/python3

import numpy
import math
import matplotlib.pyplot as plt

# Problem with ODE solver accuracy (?),
# I do not know how to solve it yet.

import sys
sys.path.append('..')
from non_lin_osc import *

# Test osc_solve_per_* functions for Duffing oscillator

w0 = 1
tau = 2
aa = [0.04]
F  = 5
ww = numpy.linspace(0.1,2,100)

for a in aa:
  amp0 = numpy.zeros(ww.size)
  amp1 = numpy.zeros(ww.size)
  amp2 = numpy.zeros(ww.size)
  amp3 = numpy.zeros(ww.size)
  ph1  = numpy.zeros(ww.size)


  for i in range(ww.size):
    w = ww[i]

    # analytical solution (min branch)
    rr = osc_duff_amp(w,F,w0,tau, a)
    amp0[i] = numpy.min(rr)

    # solving one period
    res = osc_solve_per_func(osc_duffing, [w0,tau,a], F,w)

    # harmonic 1 (amplitude)
    uv = osc_solve_per_harm(res,1)
    amp1[i] = numpy.hypot(uv[0],uv[1])
    ph1[i]  = numpy.arctan2(uv[1],uv[0])

    # harmonic 3 (x,y)
    uv = osc_solve_per_harm(res,3)
    amp2[i] = uv[0]
    amp3[i] = uv[1]


  plt.plot(ww, amp0, 'k--')
  plt.plot(ww, amp1, 'r-')
  plt.plot(ww, amp2, 'b-')
  plt.plot(ww, amp3, 'm-')

plt.xlabel('frequency')
plt.ylabel('amplitude/drive')
plt.legend()
plt.savefig('plot_duff_problem.png')
